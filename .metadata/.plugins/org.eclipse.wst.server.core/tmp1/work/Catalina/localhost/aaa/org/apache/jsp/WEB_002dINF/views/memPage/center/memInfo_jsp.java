/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.39
 * Generated at: 2017-04-02 05:12:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.memPage.center;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/Yeob's/Desktop/eclipse/Spring_Works/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/aaa/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1487668142835L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("@import url(http://fonts.googleapis.com/css?family=Raleway);\r\n");
      out.write("body {\r\n");
      out.write("  margin: 0px;\r\n");
      out.write("}\r\n");
      out.write("nav {\r\n");
      out.write("  margin-top: 30px;\r\n");
      out.write("  padding: 20px;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  font-family: Raleway;\r\n");
      out.write("  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.5);\r\n");
      out.write("}\r\n");
      out.write("#nav-1 {\r\n");
      out.write("  background: #3fa46a;\r\n");
      out.write("}\r\n");
      out.write(".link-1 {\r\n");
      out.write("  transition: 0.3s ease;\r\n");
      out.write("  background: #3fa46a;\r\n");
      out.write("  color: #ffffff;\r\n");
      out.write("  font-size: 20px;\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("  border-top: 4px solid #3fa46a;\r\n");
      out.write("  border-bottom: 4px solid #3fa46a;\r\n");
      out.write("  padding: 20px 0;\r\n");
      out.write("  margin: 0 20px;\r\n");
      out.write("}\r\n");
      out.write(".pww{\r\n");
      out.write("background-color: red;\r\n");
      out.write("}\r\n");
      out.write(".link-1:hover {\r\n");
      out.write("  border-top: 4px solid #ffffff;\r\n");
      out.write("  border-bottom: 4px solid #ffffff;\r\n");
      out.write("  padding: 6px 0; \r\n");
      out.write("}\r\n");
      out.write(".fff {\r\n");
      out.write("background: #3fa46a;\r\n");
      out.write("  color: black;\r\n");
      out.write("  font-size: 30px;\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("  padding: 20px 0;\r\n");
      out.write("  margin: 0 20px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script>\"undefined\"==typeof CODE_LIVE&&(!function(e){var t={nonSecure:\"60168\",secure:\"60173\"},c={nonSecure:\"http://\",secure:\"https://\"},r={nonSecure:\"127.0.0.1\",secure:\"gapdebug.local.genuitec.com\"},n=\"https:\"===window.location.protocol?\"secure\":\"nonSecure\";script=e.createElement(\"script\"),script.type=\"text/javascript\",script.async=!0,script.src=c[n]+r[n]+\":\"+t[n]+\"/codelive-assets/bundle.js\",e.getElementsByTagName(\"head\")[0].appendChild(script)}(document),CODE_LIVE=!0);</script></head>\r\n");
      out.write("<body data-genuitec-lp-enabled=\"false\" data-genuitec-file-id=\"wc1-111\" data-genuitec-path=\"/aaa/src/main/webapp/WEB-INF/views/memPage/center/memInfo.jsp\">\r\n");
      out.write("\r\n");
      out.write("<nav id=\"nav-1\" data-genuitec-lp-enabled=\"false\" data-genuitec-file-id=\"wc1-111\" data-genuitec-path=\"/aaa/src/main/webapp/WEB-INF/views/memPage/center/memInfo.jsp\">\r\n");
      out.write("  <a class=\"link-1\" href=\"/aaa/mem/Myshipping\">구매내역</a>\r\n");
      out.write("  <a class=\"link-1\" href=\"/aaa/mem/MyCancel\">취소/환불/교환</a>\r\n");
      out.write("     <a class=\"link-1\" href=\"/aaa/mem/MyPoint\">적립금</a>\r\n");
      out.write("  <a class=\"link-1\" href=\"/aaa/mem/memcart\">장바구니</a>\r\n");
      out.write("  <a class=\"link-1\" href=\"/aaa/mem/memQnaList\">문의/답변</a>\r\n");
      out.write("   <a class=\"fff\">개인정보</a>\r\n");
      out.write("</nav>\r\n");
      out.write("<br><br><br><br>\r\n");
      out.write("<form name=\"frm\">\r\n");
      out.write("아이디 ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ memLogin.getM_id() }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br><br>\r\n");
      out.write("\r\n");
      out.write("비밀번호 <input type=\"password\" name=\"pw\" class=\"pww\"><br><br>\r\n");
      out.write("\r\n");
      out.write("<input type=\"button\" value=\"수정페이지로\" onclick=\"javascript:gomodi('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memLogin.m_num}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("')\">\r\n");
      out.write("\r\n");
      out.write("</form><br><br><br><br>\r\n");
      out.write("\r\n");
      out.write(" <h2><font color=\"orange\">**</font>님의 개인정보 보호를 위해서 <font color=\"red\">비밀번호 , 자동입력 방지문자</font>를 입력해주세요.</h2>\r\n");
      out.write("<h2>회원님의 비밀번호가 타인에게 노출되지 않도록 주의해 주세요.</h2>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction gomodi(m_num){\r\n");
      out.write("\t\tvar frm = document.frm;\r\n");
      out.write("\t\tfrm.action = \"/aaa/mem/memPerModi?m_num=\"+m_num;\r\n");
      out.write("\t\tfrm.method = \"post\";\r\n");
      out.write("\t\tfrm.submit();\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
