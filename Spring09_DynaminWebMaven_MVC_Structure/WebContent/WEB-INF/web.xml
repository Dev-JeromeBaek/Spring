<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" version="3.1">
  <display-name>Spring09_DynaminWebMaven_MVC_Structure</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- 
		Spring의 xml 파일 등에 대한 호출
		=> ContextLoaderListener는 
			springDispatcherServlet보다 먼저 호출된다.
			
			controller의 @Component로 빈객체를 만들기 전에 @Autowired해야할 
			다른 model의 @Component로 만든 빈 객체들이 먼저 생성이 되어야한다.
			
			즉, controller의 @Component로 빈객체를 먼저 만들게 되면 
			@Autowired를 진행할 때 model쪽의 @component는 진행되어지지 않아 
			빈객체가 생성되어있지 않기 때문에 에러!!
  -->
  
  <!-- needed for ContextLoaderListener -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/root-context.xml</param-value>
	</context-param>

	<!-- Bootstraps the root web application context before servlet initialization -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
  
  <!-- The front controller of this Spring Web application, responsible for handling all application requests -->
	<servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			
			<!-- *.mv로 되어있는 url 패턴을 controller를 통해 찾을 거다. 그걸 찾으려면
					이쪽으로가면 controller가 정의되어있다. 가봐라 -->
			<param-value>
				/WEB-INF/spring09-servlet.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- Map all requests to the DispatcherServlet for handling -->
	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		
		<!-- 어떤 주소에 대해서 controller에 mapping을 시킬거냐? -->
		<url-pattern>*.mv</url-pattern>
	</servlet-mapping>
  
</web-app>